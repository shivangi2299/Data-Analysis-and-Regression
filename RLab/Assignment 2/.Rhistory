library(psych)
describe(log(PrizeMoney))
cor(css, method="pearson")
cor(css_1, method="pearson")
cor(css_1, method="pearson")
cor(css, method="pearson")
cor(css_1, method="pearson")
cor(css_1(2,7 )method="pearson")
cor(css_1)
numeric_columns <- css_1[, sapply(css_1, is.numeric)]
cor(css_1)
numeric_columns <- css_1[, sapply(css_1, is.numeric)]
cor(css_1)
coln<-css_1[,2:7]
cor(coln,method='pearson')
fullpga <- lm(log(PrizeMoney) ~ DrivingAccuracy+GIR+PuttingAverage+BirdieConversion+PuttsPerRound, data=css_1)
summary(fullpga)
vif(fullpga)
newfullpga <- lm(log(PrizeMoney) ~ GIR+BirdieConversion+PuttsPerRound, data=css_1)
summary(newfullpga)
newfullpga <- lm(log(PrizeMoney) ~ GIR+BirdieConversion+PuttsPerRound+PuttingAverage, data=css_1)
summary(newfullpga)
newfullpga <- lm(log(PrizeMoney) ~ GIR+BirdieConversion+PuttsPerRound+DrivingAccuracy, data=css_1)
summary(newfullpga)
plot( fitted(fullpga), residuals(fullpga), main="Predicted vs residuals plot")
abline(a=0, b=0, col='red')
plot( DrivingAccuracy, residuals(fullfit), main="Predicted vs Wealth plot")
plot( DrivingAccuracy, residuals(fullfit), main="Predicted vs Wealth plot")
plot( DrivingAccuracy, residuals(fullfit), main="Predicted vs Wealth plot")
plot( DrivingAccuracy, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
plot( GIR, residuals(fullpga), main="Predicted vs GIR plot")
abline(a=0, b=0, col='red')
plot( PuttingAverage, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
plot( BirdieConversion, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
plot( PuttsPerRound, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
qqnorm(residuals(fullpga))
qqline(residuals(fullpga), col = 2)
influence.measures(fullpga)
plot(rstudent(fullfit)~hatvalues(fullpga))
influence.measures(fullpga)
plot(rstudent(fullpga)~hatvalues(fullpga))
summary(influence.measures(fullpga))
dfbeta(fullpga)
covratio(fullpga)
dffits(fullpga)
cooks.distance(fullpga)
coefficients(GIR)
coef(fullpga)[GIR]
coef(fullpga)["GIR"]
coef(fullpga)["GIR"]
exp(coef(fullpga)["GIR"])
new=data.frame(DrivingAccuracy=c(64),GIR=c(67),BirdieConversion=c(28),PuttingAverage=c(1.77),PuttsPerRound=c(29.16))
predict(fullfit, new, interval="prediction", level=0.95)
new=data.frame(DrivingAccuracy=c(64),GIR=c(67),BirdieConversion=c(28),PuttingAverage=c(1.77),PuttsPerRound=c(29.16))
predict(fullpga, new, interval="prediction", level=0.95)
exp(predict(fullpga, new, interval="prediction", level=0.95) )
summary(css)
plot(Balance,Age, main="Scatterplot of Age vs Account Balance")
plot(Balance,Education, main="Scatterplot of Eduction vs Account Balance")
plot(Balance,Income, main="Scatterplot of Income vs Account Balance")
plot(Balance,HomeVal, main="Scatterplot of Balance vs HomeVal ")
plot(Balance,HomeVal, main="Scatterplot of Account Balance vs HomeVal ")
fullfit_3 <- lm(Balance ~ Age+Income+Wealth+Education, data=css)
summary(fullfit_3)
plot( fitted(fullfit_3), residuals(fullfit_3), main="Predicted vs residuals plot")
abline(a=0, b=0, col='red')
plot( Age, residuals(fullfit_3), main="Predicted vs Age plot")
abline(a=0, b=0, col='red')
plot( Income, residuals(fullfit_3), main="Predicted vs Income plot")
abline(a=0, b=0, col='red')
plot( Education, residuals(fullfit_3), main="Predicted vs Education plot")
abline(a=0, b=0, col='red')
plot( HomeVal, residuals(fullfit_3), main="Predicted vs Home values")
abline(a=0, b=0, col='red')
plot( Wealth, residuals(fullfit_3), main="Predicted vs Wealth plot")
abline(a=0, b=0, col='red')
qqnorm(residuals(fullfit_3))
qqline(residuals(fullfit_3), col = 2)
library(QuantPsyc)
lm.beta(fullfit_3)
new=data.frame(Age=c(34),Education=c(13),Income=(64000),HomeVal=c(140000),Wealth=c(160000))
predict(fullfit_3, new, interval="prediction", level=0.95)
plot( fitted(fullpga), residuals(fullpga), main="Predicted vs residuals plot")
abline(a=0, b=0, col='red')
qqnorm(residuals(fullpga))
qqline(residuals(fullpga), col = 2)
error <- qnorm(0.975) * sd(sqrt(PrizeMoney))/sqrt(32)
qqnorm(residuals(fullpga))
qqline(residuals(fullpga), col = 2)
error <- qnorm(0.975) * sd(sqrt(PrizeMoney))/sqrt(32)
qqnorm(residuals(fullpga))
qqline(residuals(fullpga), col = 2)
error <- qnorm(0.975) * sd(sqrt(PrizeMoney))/sqrt(32)
print(error)
qqnorm(residuals(fullpga))
qqline(residuals(fullpga), col = 2)
error <- qnorm(0.975) * sd(sqrt(PrizeMoney))/sqrt(32)
print(error)
lower_interval <- mean(sqrt(PrizeMoney)) - error
upper_interval <- mean(sqrt(PrizeMoney)) + error
Print(lower_interval)
qqnorm(residuals(fullpga))
qqline(residuals(fullpga), col = 2)
error <- qnorm(0.975) * sd(sqrt(PrizeMoney))/sqrt(32)
print(error)
lower_interval <- mean(sqrt(PrizeMoney)) - error
upper_interval <- mean(sqrt(PrizeMoney)) + error
print(lower_interval)
print(upper_interval)
qqnorm(residuals(fullpga))
qqline(residuals(fullpga), col = 2)
influencePlot(fullfit_3)
influencePlot(fullpga)
knitr::opts_chunk$set(echo = TRUE)
css=read.table("Bankingfull.txt", header=T, sep="\t")
Age=css[,1]
Education=css[,2]
Income=css[,3]
HomeVal=css[,4]
Wealth=css[,5]
Balance=css[,6]
summary(css)
plot(Balance,Age, main="Scatterplot of Age vs Account Balance")
plot(Balance,Education, main="Scatterplot of Eduction vs Account Balance")
plot(Balance,Income, main="Scatterplot of Income vs Account Balance")
plot(Balance,HomeVal, main="Scatterplot of Account Balance vs HomeVal ")
plot(Balance,Wealth, main="Scatterplot of Balance vs Wealth ")
cor(css, method="pearson")
fullfit <- lm(Balance ~ Age+Education+Income+HomeVal+Wealth, data=css)
summary(fullfit)
library(car)
vif(fit)
fullfit_2 <- lm(Balance ~ Age+Education+HomeVal, data=css)
summary(fullfit_2)
fullfit_3 <- lm(Balance ~ Age+Income+Wealth+Education, data=css)
summary(fullfit_3)
plot( fitted(fullfit_3), residuals(fullfit_3), main="Predicted vs residuals plot")
abline(a=0, b=0, col='red')
plot( Age, residuals(fullfit_3), main="Predicted vs Age plot")
abline(a=0, b=0, col='red')
plot( Income, residuals(fullfit_3), main="Predicted vs Income plot")
abline(a=0, b=0, col='red')
plot( Education, residuals(fullfit_3), main="Predicted vs Education plot")
abline(a=0, b=0, col='red')
plot( HomeVal, residuals(fullfit_3), main="Predicted vs Home values")
abline(a=0, b=0, col='red')
plot( Wealth, residuals(fullfit_3), main="Predicted vs Wealth plot")
abline(a=0, b=0, col='red')
qqnorm(residuals(fullfit_3))
qqline(residuals(fullfit_3), col = 2)
influence.measures(fullfit_3)
plot(rstudent(fullfit_3)~hatvalues(fullfit_3))
summary(influence.measures(fullfit_3))
influencePlot(fullfit_3)
library(QuantPsyc)
lm.beta(fullfit_3)
new=data.frame(Age=c(34),Education=c(13),Income=(64000),HomeVal=c(140000),Wealth=c(160000))
predict(fullfit_3, new, interval="prediction", level=0.95)
css_1=read.table("pgatour2006_small.csv", header=T, sep=",")
Name=css_1[,1]
PrizeMoney=css_1[,2]
DrivingAccuracy=css_1[,3]
GIR=css_1[,4]
PuttingAverage=css_1[,5]
BirdieConversion=css_1[,6]
PuttsPerRound=css_1[,7]
plot(PrizeMoney,DrivingAccuracy, main="Scatterplot of Prize money vs Driving Accuracy")
plot(PrizeMoney,GIR, main="Scatterplot of Prize money vs GIR")
plot(PrizeMoney,PuttingAverage, main="Scatterplot of Prize money vs Putting Average")
plot(PrizeMoney,BirdieConversion, main="Scatterplot of Prize money vs Birdie Conversion")
plot(PrizeMoney,PuttsPerRound, main="Scatterplot of Prize money vs Putts Per Round")
hist(PrizeMoney, xlab="Prize Money", prob=TRUE, main="Histogram")
library(psych)
describe(PrizeMoney)
hist(log(PrizeMoney), xlab="Prize Money", prob=TRUE, main="Histogram")
library(psych)
describe(log(PrizeMoney))
coln<-css_1[,2:7]
cor(coln,method='pearson')
fullpga <- lm(log(PrizeMoney) ~ DrivingAccuracy+GIR+PuttingAverage+BirdieConversion+PuttsPerRound, data=css_1)
summary(fullpga)
vif(fullpga)
newfullpga <- lm(log(PrizeMoney) ~ GIR+BirdieConversion+PuttsPerRound, data=css_1)
summary(newfullpga)
plot( fitted(fullpga), residuals(fullpga), main="Predicted vs residuals plot")
abline(a=0, b=0, col='red')
plot( DrivingAccuracy, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
plot( GIR, residuals(fullpga), main="Predicted vs GIR plot")
abline(a=0, b=0, col='red')
plot( PuttingAverage, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
plot( BirdieConversion, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
plot( PuttsPerRound, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
qqnorm(residuals(fullpga))
qqline(residuals(fullpga), col = 2)
influence.measures(fullpga)
plot(rstudent(fullpga)~hatvalues(fullpga))
summary(influence.measures(fullpga))
influencePlot(fullpga)
dfbeta(fullpga)
covratio(fullpga)
dffits(fullpga)
cooks.distance(fullpga)
knitr::opts_chunk$set(echo = TRUE)
css=read.table("Bankingfull.txt", header=T, sep="\t")
Age=css[,1]
Education=css[,2]
Income=css[,3]
HomeVal=css[,4]
Wealth=css[,5]
Balance=css[,6]
summary(css)
plot(Balance,Age, main="Scatterplot of Age vs Account Balance")
plot(Balance,Education, main="Scatterplot of Eduction vs Account Balance")
plot(Balance,Income, main="Scatterplot of Income vs Account Balance")
plot(Balance,HomeVal, main="Scatterplot of Account Balance vs HomeVal ")
plot(Balance,Wealth, main="Scatterplot of Balance vs Wealth ")
cor(css, method="pearson")
fullfit <- lm(Balance ~ Age+Education+Income+HomeVal+Wealth, data=css)
summary(fullfit)
library(car)
vif(fit)
fullfit_2 <- lm(Balance ~ Age+Education+HomeVal, data=css)
summary(fullfit_2)
fullfit_3 <- lm(Balance ~ Age+Income+Wealth+Education, data=css)
summary(fullfit_3)
plot( fitted(fullfit_3), residuals(fullfit_3), main="Predicted vs residuals plot")
abline(a=0, b=0, col='red')
plot( Age, residuals(fullfit_3), main="Predicted vs Age plot")
abline(a=0, b=0, col='red')
plot( Income, residuals(fullfit_3), main="Predicted vs Income plot")
abline(a=0, b=0, col='red')
plot( Education, residuals(fullfit_3), main="Predicted vs Education plot")
abline(a=0, b=0, col='red')
plot( HomeVal, residuals(fullfit_3), main="Predicted vs Home values")
abline(a=0, b=0, col='red')
plot( Wealth, residuals(fullfit_3), main="Predicted vs Wealth plot")
abline(a=0, b=0, col='red')
qqnorm(residuals(fullfit_3))
qqline(residuals(fullfit_3), col = 2)
influence.measures(fullfit_3)
plot(rstudent(fullfit_3)~hatvalues(fullfit_3))
summary(influence.measures(fullfit_3))
influencePlot(fullfit_3)
library(QuantPsyc)
lm.beta(fullfit_3)
new=data.frame(Age=c(34),Education=c(13),Income=(64000),HomeVal=c(140000),Wealth=c(160000))
predict(fullfit_3, new, interval="prediction", level=0.95)
css_1=read.table("pgatour2006_small.csv", header=T, sep=",")
Name=css_1[,1]
PrizeMoney=css_1[,2]
DrivingAccuracy=css_1[,3]
GIR=css_1[,4]
PuttingAverage=css_1[,5]
BirdieConversion=css_1[,6]
PuttsPerRound=css_1[,7]
plot(PrizeMoney,DrivingAccuracy, main="Scatterplot of Prize money vs Driving Accuracy")
plot(PrizeMoney,GIR, main="Scatterplot of Prize money vs GIR")
plot(PrizeMoney,PuttingAverage, main="Scatterplot of Prize money vs Putting Average")
plot(PrizeMoney,BirdieConversion, main="Scatterplot of Prize money vs Birdie Conversion")
plot(PrizeMoney,PuttsPerRound, main="Scatterplot of Prize money vs Putts Per Round")
hist(PrizeMoney, xlab="Prize Money", prob=TRUE, main="Histogram")
library(psych)
describe(PrizeMoney)
hist(log(PrizeMoney), xlab="Prize Money", prob=TRUE, main="Histogram")
library(psych)
describe(log(PrizeMoney))
coln<-css_1[,2:7]
cor(coln,method='pearson')
fullpga <- lm(log(PrizeMoney) ~ DrivingAccuracy+GIR+PuttingAverage+BirdieConversion+PuttsPerRound, data=css_1)
summary(fullpga)
vif(fullpga)
newfullpga <- lm(log(PrizeMoney) ~ GIR+BirdieConversion+PuttsPerRound, data=css_1)
summary(newfullpga)
plot( fitted(fullpga), residuals(fullpga), main="Predicted vs residuals plot")
abline(a=0, b=0, col='red')
plot( DrivingAccuracy, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
plot( GIR, residuals(fullpga), main="Predicted vs GIR plot")
abline(a=0, b=0, col='red')
plot( PuttingAverage, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
plot( BirdieConversion, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
plot( PuttsPerRound, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
qqnorm(residuals(fullpga))
qqline(residuals(fullpga), col = 2)
influence.measures(fullpga)
plot(rstudent(fullpga)~hatvalues(fullpga))
summary(influence.measures(fullpga))
influencePlot(fullpga)
dfbeta(fullpga)
covratio(fullpga)
dffits(fullpga)
cooks.distance(fullpga)
coef(fullpga)["GIR"]
exp(coef(fullpga)["GIR"])
new=data.frame(DrivingAccuracy=c(64),GIR=c(67),BirdieConversion=c(28),PuttingAverage=c(1.77),PuttsPerRound=c(29.16))
predict(fullpga, new, interval="prediction", level=0.95)
exp(predict(fullpga, new, interval="prediction", level=0.95) )
css=read.table("Bankingfull.txt", header=T, sep="\t")
Age=css[,1]
Education=css[,2]
Income=css[,3]
HomeVal=css[,4]
Wealth=css[,5]
Balance=css[,6]
summary(css)
knitr::opts_chunk$set(echo = TRUE)
css=read.table("Bankingfull.txt", header=T, sep="\t")
Age=css[,1]
Education=css[,2]
Income=css[,3]
HomeVal=css[,4]
Wealth=css[,5]
Balance=css[,6]
summary(css)
plot(Balance,Education, main="Scatterplot of Eduction vs Account Balance")
css=read.table("Bankingfull.txt", header=T, sep="\t")
Age=css[,1]
Education=css[,2]
Income=css[,3]
HomeVal=css[,4]
Wealth=css[,5]
Balance=css[,6]
summary(css)
plot(Balance,Age, main="Scatterplot of Age vs Account Balance")
plot(Balance,Education, main="Scatterplot of Eduction vs Account Balance")
plot(Balance,Income, main="Scatterplot of Income vs Account Balance")
plot(Balance,HomeVal, main="Scatterplot of Account Balance vs HomeVal ")
plot(Balance,Wealth, main="Scatterplot of Balance vs Wealth ")
cor(css, method="pearson")
fullfit <- lm(Balance ~ Age+Education+Income+HomeVal+Wealth, data=css)
summary(fullfit)
library(car)
vif(fit)
fullfit_2 <- lm(Balance ~ Age+Education+HomeVal, data=css)
summary(fullfit_2)
fullfit_3 <- lm(Balance ~ Age+Income+Wealth+Education, data=css)
summary(fullfit_3)
plot( fitted(fullfit_3), residuals(fullfit_3), main="Predicted vs residuals plot")
abline(a=0, b=0, col='red')
plot( Age, residuals(fullfit_3), main="Predicted vs Age plot")
abline(a=0, b=0, col='red')
plot( Income, residuals(fullfit_3), main="Predicted vs Income plot")
abline(a=0, b=0, col='red')
plot( Education, residuals(fullfit_3), main="Predicted vs Education plot")
abline(a=0, b=0, col='red')
plot( HomeVal, residuals(fullfit_3), main="Predicted vs Home values")
abline(a=0, b=0, col='red')
plot( Wealth, residuals(fullfit_3), main="Predicted vs Wealth plot")
abline(a=0, b=0, col='red')
qqnorm(residuals(fullfit_3))
qqline(residuals(fullfit_3), col = 2)
influence.measures(fullfit_3)
plot(rstudent(fullfit_3)~hatvalues(fullfit_3))
summary(influence.measures(fullfit_3))
influencePlot(fullfit_3)
library(QuantPsyc)
lm.beta(fullfit_3)
new=data.frame(Age=c(34),Education=c(13),Income=(64000),HomeVal=c(140000),Wealth=c(160000))
predict(fullfit_3, new, interval="prediction", level=0.95)
css_1=read.table("pgatour2006_small.csv", header=T, sep=",")
Name=css_1[,1]
PrizeMoney=css_1[,2]
DrivingAccuracy=css_1[,3]
GIR=css_1[,4]
PuttingAverage=css_1[,5]
BirdieConversion=css_1[,6]
PuttsPerRound=css_1[,7]
plot(PrizeMoney,DrivingAccuracy, main="Scatterplot of Prize money vs Driving Accuracy")
plot(PrizeMoney,GIR, main="Scatterplot of Prize money vs GIR")
plot(PrizeMoney,PuttingAverage, main="Scatterplot of Prize money vs Putting Average")
plot(PrizeMoney,BirdieConversion, main="Scatterplot of Prize money vs Birdie Conversion")
plot(PrizeMoney,PuttsPerRound, main="Scatterplot of Prize money vs Putts Per Round")
hist(PrizeMoney, xlab="Prize Money", prob=TRUE, main="Histogram")
library(psych)
describe(PrizeMoney)
hist(log(PrizeMoney), xlab="Prize Money", prob=TRUE, main="Histogram")
library(psych)
describe(log(PrizeMoney))
coln<-css_1[,2:7]
cor(coln,method='pearson')
fullpga <- lm(log(PrizeMoney) ~ DrivingAccuracy+GIR+PuttingAverage+BirdieConversion+PuttsPerRound, data=css_1)
summary(fullpga)
vif(fullpga)
newfullpga <- lm(log(PrizeMoney) ~ GIR+BirdieConversion+PuttsPerRound, data=css_1)
summary(newfullpga)
plot( fitted(fullpga), residuals(fullpga), main="Predicted vs residuals plot")
abline(a=0, b=0, col='red')
plot( DrivingAccuracy, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
plot( GIR, residuals(fullpga), main="Predicted vs GIR plot")
abline(a=0, b=0, col='red')
plot( PuttingAverage, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
plot( BirdieConversion, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
plot( PuttsPerRound, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
qqnorm(residuals(fullpga))
qqline(residuals(fullpga), col = 2)
influence.measures(fullpga)
plot(rstudent(fullpga)~hatvalues(fullpga))
summary(influence.measures(fullpga))
influencePlot(fullpga)
coef(fullpga)["GIR"]
exp(coef(fullpga)["GIR"])
new=data.frame(DrivingAccuracy=c(64),GIR=c(67),BirdieConversion=c(28),PuttingAverage=c(1.77),PuttsPerRound=c(29.16))
predict(fullpga, new, interval="prediction", level=0.95)
exp(predict(fullpga, new, interval="prediction", level=0.95) )
css=read.table("Bankingfull.txt", header=T, sep="\t")
Age=css[,1]
Education=css[,2]
Income=css[,3]
HomeVal=css[,4]
Wealth=css[,5]
Balance=css[,6]
summary(css)
plot(Balance,Age, main="Scatterplot of Age vs Account Balance")
plot(Balance,Education, main="Scatterplot of Eduction vs Account Balance")
plot(Balance,Income, main="Scatterplot of Income vs Account Balance")
plot(Balance,HomeVal, main="Scatterplot of Account Balance vs HomeVal ")
plot(Balance,Wealth, main="Scatterplot of Balance vs Wealth ")
cor(css, method="pearson")
fullfit <- lm(Balance ~ Age+Education+Income+HomeVal+Wealth, data=css)
summary(fullfit)
library(car)
vif(fit)
fullfit_2 <- lm(Balance ~ Age+Education+HomeVal, data=css)
summary(fullfit_2)
fullfit_3 <- lm(Balance ~ Age+Income+Wealth+Education, data=css)
summary(fullfit_3)
plot( fitted(fullfit_3), residuals(fullfit_3), main="Predicted vs residuals plot")
abline(a=0, b=0, col='red')
plot( Age, residuals(fullfit_3), main="Predicted vs Age plot")
abline(a=0, b=0, col='red')
plot( Income, residuals(fullfit_3), main="Predicted vs Income plot")
abline(a=0, b=0, col='red')
plot( Education, residuals(fullfit_3), main="Predicted vs Education plot")
abline(a=0, b=0, col='red')
plot( HomeVal, residuals(fullfit_3), main="Predicted vs Home values")
abline(a=0, b=0, col='red')
plot( Wealth, residuals(fullfit_3), main="Predicted vs Wealth plot")
abline(a=0, b=0, col='red')
qqnorm(residuals(fullfit_3))
qqline(residuals(fullfit_3), col = 2)
influence.measures(fullfit_3)
plot(rstudent(fullfit_3)~hatvalues(fullfit_3))
summary(influence.measures(fullfit_3))
influencePlot(fullfit_3)
library(QuantPsyc)
lm.beta(fullfit_3)
css_1=read.table("pgatour2006_small.csv", header=T, sep=",")
Name=css_1[,1]
PrizeMoney=css_1[,2]
DrivingAccuracy=css_1[,3]
GIR=css_1[,4]
PuttingAverage=css_1[,5]
BirdieConversion=css_1[,6]
PuttsPerRound=css_1[,7]
plot(PrizeMoney,DrivingAccuracy, main="Scatterplot of Prize money vs Driving Accuracy")
plot(PrizeMoney,GIR, main="Scatterplot of Prize money vs GIR")
plot(PrizeMoney,PuttingAverage, main="Scatterplot of Prize money vs Putting Average")
plot(PrizeMoney,BirdieConversion, main="Scatterplot of Prize money vs Birdie Conversion")
plot(PrizeMoney,PuttsPerRound, main="Scatterplot of Prize money vs Putts Per Round")
hist(PrizeMoney, xlab="Prize Money", prob=TRUE, main="Histogram")
library(psych)
describe(PrizeMoney)
hist(log(PrizeMoney), xlab="Prize Money", prob=TRUE, main="Histogram")
library(psych)
describe(log(PrizeMoney))
coln<-css_1[,2:7]
cor(coln,method='pearson')
fullpga <- lm(log(PrizeMoney) ~ DrivingAccuracy+GIR+PuttingAverage+BirdieConversion+PuttsPerRound, data=css_1)
summary(fullpga)
vif(fullpga)
newfullpga <- lm(log(PrizeMoney) ~ GIR+BirdieConversion+PuttsPerRound, data=css_1)
summary(newfullpga)
plot( fitted(fullpga), residuals(fullpga), main="Predicted vs residuals plot")
abline(a=0, b=0, col='red')
plot( DrivingAccuracy, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
plot( GIR, residuals(fullpga), main="Predicted vs GIR plot")
abline(a=0, b=0, col='red')
plot( PuttingAverage, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
plot( BirdieConversion, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
plot( PuttsPerRound, residuals(fullpga), main="Predicted vs Driving Accuracy plot")
abline(a=0, b=0, col='red')
qqnorm(residuals(fullpga))
qqline(residuals(fullpga), col = 2)
influence.measures(fullpga)
plot(rstudent(fullpga)~hatvalues(fullpga))
summary(influence.measures(fullpga))
influencePlot(fullpga)
coef(fullpga)["GIR"]
exp(coef(fullpga)["GIR"])
new=data.frame(DrivingAccuracy=c(64),GIR=c(67),BirdieConversion=c(28),PuttingAverage=c(1.77),PuttsPerRound=c(29.16))
predict(fullpga, new, interval="prediction", level=0.95)
exp(predict(fullpga, new, interval="prediction", level=0.95) )
library(car)
vif(fullfit)
